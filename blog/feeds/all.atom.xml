<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017Spring 協同產品設計實習 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-06-14T13:00:00+08:00</updated><entry><title>2017/06/14 W17</title><link href="./2017Spring-cd-W17.html" rel="alternate"></link><published>2017-06-14T13:00:00+08:00</published><updated>2017-06-14T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-06-14:./2017Spring-cd-W17.html</id><summary type="html">&lt;p&gt;各組員網誌上的 2D 繪圖, 並將程式碼顯示在繪圖網誌文章中&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;p&gt;ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "35px ScriptS"
ctx.fillText("40423246 ",330,330)
ctx.stroke()
&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/9.png" width="560" /&gt;&lt;/p&gt;</summary><category term="111"></category></entry><entry><title>2017/06/07 W16</title><link href="./2017Spring-cd-W16.html" rel="alternate"></link><published>2017-06-07T13:00:00+08:00</published><updated>2017-06-07T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-06-07:./2017Spring-cd-W16.html</id><summary type="html">&lt;p&gt;齒輪模擬
 &lt;/p&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/221423385" width="640" height="413" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/221423385"&gt;Onshape 齒輪模擬&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="111"></category></entry><entry><title>2017/05/31 W15</title><link href="./2017Spring-cd-W15.html" rel="alternate"></link><published>2017-05-31T11:00:00+08:00</published><updated>2017-05-31T11:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-05-31:./2017Spring-cd-W15.html</id><summary type="html">&lt;p&gt;從單一 2D 正齒輪繪圖到齒輪組嚙合&lt;/p&gt;
&lt;p&gt;利用漸開線原理, 以 Brython 繪製單一正齒輪廓:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 定義節圓直徑 rp
        rp = 250
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "black")

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "35px ScriptS"
ctx.fillText("40423246 ",330,330)
ctx.stroke()
&lt;/script&gt;



&lt;h6&gt;&lt;/h6&gt;
&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear2" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        rp = 250
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear2']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "rad")

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "35px ScriptS"
ctx.fillText("40423246 ",330,340)
ctx.stroke()
&lt;/script&gt;</summary><category term="Brython"></category></entry><entry><title>2017/05/24 W14</title><link href="./2017Spring-cd-W14.html" rel="alternate"></link><published>2017-05-24T13:00:00+08:00</published><updated>2017-05-24T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-05-24:./2017Spring-cd-W14.html</id><summary type="html">&lt;p&gt;架設伺服器主機
&lt;/p&gt;
&lt;p&gt;參考資料 &lt;a href="https://40423245.github.io/2017springcd_hw/blog/2017spring-cd-W14.html"&gt;40423245&lt;/a&gt;&lt;/p&gt;</summary><category term="111"></category></entry><entry><title>2017/05/17 W13</title><link href="./2017Spring-cd-W13.html" rel="alternate"></link><published>2017-05-17T13:00:00+08:00</published><updated>2017-05-17T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-05-17:./2017Spring-cd-W13.html</id><summary type="html">&lt;h3&gt;八連桿行走機構&lt;/h3&gt;



&lt;p&gt;&lt;img src="./../data/chrome_2017-06-20_22-41-24.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;八連桿行走機構: &lt;a href="https://cad.onshape.com/documents/d099055444c802976fbac16b/w/01336ea23999305b909be1f5/e/286a1694a9baa8b2174e572a"&gt;OnShape 檔案&lt;/a&gt;&lt;/p&gt;</summary><category term="111"></category></entry><entry><title>2017/05/10 W12</title><link href="./2017Spring-cd-W12.html" rel="alternate"></link><published>2017-05-10T13:00:00+08:00</published><updated>2017-05-10T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-05-10:./2017Spring-cd-W12.html</id><summary type="html">&lt;h2&gt;漸開線齒輪繪製&lt;/h2&gt;
&lt;p&gt;
以節圓直徑d=50,模數m=2.5,齒數t=20繪製 &lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/222360718" width="640" height="348" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/222360718"&gt;Untitled&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="111"></category></entry><entry><title>2017/05/03 W11</title><link href="./2017Spring-cd-W11.html" rel="alternate"></link><published>2017-05-03T13:00:00+08:00</published><updated>2017-05-03T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-05-03:./2017Spring-cd-W11.html</id><summary type="html">&lt;h3&gt;以 Brython 繪製單一正齒輪廓&lt;/h3&gt;



&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 53
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
&lt;/script&gt;

&lt;h2&gt;處理兩種正齒輪嚙合的繪圖&lt;/h2&gt;
&lt;p&gt;&lt;canvas id='gear3' width='800' height='400'&gt;&lt;/canvas&gt;&lt;/p&gt;
&lt;script type="text/python3"&gt;
# 導入 browser 模組中的 document, 並設為 doc 變數
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)

                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)

# 準備在 id="gear3" 的 canvas 中繪圖
canvas = doc["gear3"]
ctx = canvas.getContext("2d")

# 模數決定齒的尺寸大小, 囓合齒輪組必須有相同的模數與壓力角
# 壓力角 pa 單位為角度
pa = 20
# 第1齒輪齒數
n_g1 = 17
# 第2齒輪齒數
n_g2 = 11
# 第3齒輪齒數
n_g3 = 13
# m 為模數, 根據畫布的寬度, 計算適合的模數大小
m = (0.8*canvas.width)/(n_g1+n_g2+n_g3)
# 根據模數 m, 計算各齒輪的節圓半徑
rp_g1 = m*n_g1/2
rp_g2 = m*n_g2/2
rp_g3 = m*n_g3/2
#單一正齒輪繪圖呼叫格式 Spur(ctx).Gear(x, y, r, n, pa, "blue")
# 開始繪製囓合齒輪輪廓
# 繪圖第1齒輪的圓心座標, 因為希望繪圖佔去 canvas.width 的 80%, 所以兩邊各預留 10% 距離
x_g1 = canvas.width*0.1+rp_g1
# y 方向繪圖區域上方預留 canvas.height 的 20%
y_g1 = canvas.height*0.2+rp_g1
# 第2齒輪的圓心座標, 假設排列成水平, 表示各齒輪圓心 y 座標相同
x_g2 = x_g1 + rp_g1 + rp_g2
y_g2 = y_g1
# 第3齒輪的圓心座標
x_g3 = x_g1 + rp_g1 + 2*rp_g2 + rp_g3
y_g3 = y_g1

# 將第1齒輪順時鐘轉 90 度, 也就是 math.pi/2
# 使用 ctx.save() 與 ctx.restore() 以確保各齒輪以相對座標進行旋轉繪圖
ctx.save()
# translate to the origin of second gear
ctx.translate(x_g1, y_g1)
# rotate to engage
ctx.rotate(math.pi/2)
# put it back
ctx.translate(-x_g1, -y_g1)
# 繪製第一個齒輪輪廓
Spur(ctx).Gear(x_g1, y_g1, rp_g1, n_g1, pa, "blue")
ctx.restore()

# 將第2齒輪逆時鐘轉 90 度之後, 再多轉一齒, 以便與第1齒輪進行囓合
ctx.save()
# translate to the origin of second gear
ctx.translate(x_g2, y_g2)
# rotate to engage
ctx.rotate(-math.pi/2-math.pi/n_g2)
# put it back
ctx.translate(-x_g2, -y_g2)
Spur(ctx).Gear(x_g2, y_g2, rp_g2, n_g2, pa, "black")
ctx.restore()

# 將第3齒輪逆時鐘轉 90 度之後, 再往回轉第2齒輪定位帶動轉角, 然後再逆時鐘多轉一齒, 以便與第2齒輪進行囓合
ctx.save()
# translate to the origin of second gear
ctx.translate(x_g3, y_g3)
# rotate to engage
# math.pi+math.pi/n_g2 為第2齒輪從順時鐘轉 90 度之後, 必須配合目前的標記線所作的齒輪 2 轉動角度, 要轉換到齒輪3 的轉動角度
# 必須乘上兩齒輪齒數的比例, 若齒輪2 大, 則齒輪3 會轉動較快
# 第1個 -math.pi/2 為將原先垂直的第3齒輪定位線逆時鐘旋轉 90 度
# -math.pi/n_g3 則是第3齒與第2齒定位線重合後, 必須再逆時鐘多轉一齒的轉角, 以便進行囓合
# (math.pi+math.pi/n_g2)*n_g2/n_g3 則是第2齒原定位線為順時鐘轉動 90 度, 
# 但是第2齒輪為了與第1齒輪囓合, 已經距離定位線, 多轉了 180 度, 再加上第2齒輪的一齒角度, 因為要帶動第3齒輪定位, 
# 這個修正角度必須要再配合第2齒與第3齒的轉速比加以轉換成第3齒輪的轉角, 因此乘上 n_g2/n_g3
ctx.rotate(-math.pi/2-math.pi/n_g3+(math.pi+math.pi/n_g2)*n_g2/n_g3)
# put it back
ctx.translate(-x_g3, -y_g3)
Spur(ctx).Gear(x_g3, y_g3, rp_g3, n_g3, pa, "red")
ctx.restore()
&lt;/script&gt;</summary><category term="111"></category></entry><entry><title>2017/04/26 W10</title><link href="./2017Spring-cd-W10.html" rel="alternate"></link><published>2017-04-26T13:00:00+08:00</published><updated>2017-04-26T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-04-26:./2017Spring-cd-W10.html</id><summary type="html">&lt;h2&gt;四連桿機構協同 Trace Point 查驗&lt;/h2&gt;
&lt;p&gt;
尺寸圖
&lt;img src="./../data/midterm5.png" width="560" /&gt;&lt;/p&gt;
&lt;h2&gt;Onshape 運動模擬&lt;/h2&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/214771995" width="640" height="317" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214771995"&gt;期中行走機構&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;V-rep 運動模擬
&lt;iframe src="https://player.vimeo.com/video/222355177" width="640" height="457" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/222355177"&gt;Fourbar  V-rep模擬&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="11"></category></entry><entry><title>2017/04/19 W9</title><link href="./2017Spring-cd-W9.html" rel="alternate"></link><published>2017-04-19T13:00:00+08:00</published><updated>2017-04-19T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-04-19:./2017Spring-cd-W9.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第九週期中考&lt;/h2&gt;
&lt;h2&gt;&lt;h3&gt;四連桿機構協同 Trace Point 查驗&lt;/h3&gt;&lt;/h2&gt;
&lt;p&gt;&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;&lt;/p&gt;
&lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;p&gt;&lt;!-- 以下實際利用  Brython 畫四連桿 trace point 路徑--&gt;
 &lt;canvas id="fourbar_40423226" width="600" height="400"&gt;&lt;/canvas&gt;&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
# 準備繪圖畫布
canvas = doc["fourbar_40423226"]
ctx = canvas.getContext("2d")

fourbar_data = open("./../data/midterm5.csv").read()
fourbar_list = fourbar_data.splitlines()
# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 利用 transform 將 y 座標反轉, 且 offset canvas.height
# (X scale, X skew, Y skew, Y scale, X offset, Y offset)
# 配合圖形位置進行座標轉換
ctx.transform(1, 0, 0, -1, canvas.width/2+250, canvas.height/2+100)
# 畫出 x 與 y 座標線
# 各座標值放大 3 倍
ratio = 3
ctx.moveTo(0, 0)
ctx.lineTo(-30*ratio, 0)
start_point = fourbar_list[0].split(",")
ctx.moveTo(float(start_point[0])*ratio, float(start_point[1])*ratio)
count = 0
for data in fourbar_list[1:]:
    point = data.split(",")
    #count = count + 1
    #container1 &lt;= str(count) + ":" + point[0] + "," + point[1]
    #container1 &lt;= html.BR()
    ctx.lineTo(float(point[0])*ratio, float(point[1])*ratio)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;/pre&gt;

&lt;iframe src="https://player.vimeo.com/video/213779215" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/213779215"&gt;midterm7&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;協同產品設計課程W9-mission3-動畫&lt;/h2&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/214771995" width="640" height="317" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214771995"&gt;期中行走機構&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="111"></category></entry><entry><title>2017/04/12 W8</title><link href="./2017Spring-cd-W8.html" rel="alternate"></link><published>2017-04-12T13:00:00+08:00</published><updated>2017-04-12T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-04-12:./2017Spring-cd-W8.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第八週上課內容&lt;/h2&gt;
&lt;h3&gt;&lt;a href="https://pygroup-ag100.rhcloud.com"&gt;小組互評&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a href="http://mde1a2.kmol.info:8000/k96tgzh1ofbl"&gt;個人自評&lt;/a&gt;&lt;/h3&gt;</summary><category term="期中自評成績"></category></entry><entry><title>2017/04/05 W7</title><link href="./2017Spring-cd-W7.html" rel="alternate"></link><published>2017-04-05T13:00:00+08:00</published><updated>2017-04-05T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-04-05:./2017Spring-cd-W7.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第七週上課內容&lt;/h2&gt;
&lt;h2&gt;一.Fossil 程式碼&lt;/h2&gt;
&lt;p&gt;&lt;img src="./../data/426.png" width="560" /&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/214789504" width="640" height="341" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/214789504"&gt;Fossil SCM&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;二.八連桿機構&lt;/h2&gt;
&lt;iframe src="https://player.vimeo.com/video/214629072" width="640" height="341" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/214629072"&gt;8link 運動模擬&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;img src="./../data/8link/eight/bracket_lower.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/jasen_8link.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/link_15.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/link_39.3.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/link_39.4.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/link_50.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/link_61.9.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/link_fixed.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/pin_10.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/pin_10-2.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/pin_15.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/pin_15-2.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/solvespace link60.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/solvespae link50.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/8link/eight/triangle_upper.png" width="560" /&gt;&lt;/p&gt;</summary><category term="w7"></category></entry><entry><title>2017/03/29 W6</title><link href="./2017Spring-cd-W6.html" rel="alternate"></link><published>2017-03-29T13:00:00+08:00</published><updated>2017-03-29T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-03-29:./2017Spring-cd-W6.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第六週上課內容&lt;/h2&gt;
&lt;h2&gt;Fourbar運動模擬&lt;/h2&gt;
&lt;h2&gt;1.各零件尺寸&lt;/h2&gt;
&lt;iframe src="https://player.vimeo.com/video/214884580" width="640" height="341" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/214884580"&gt;V-rep 模擬四連桿機構&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;1.link01&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/4bar/four/solvespace_2017-04-18_18-40-39.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;2.link30&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/4bar/four/solvespace_2017-04-18_18-40-53.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;3.link50&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/4bar/four/solvespace_2017-04-18_18-41-12.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;4.link60&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/4bar/four/solvespace_2017-04-18_18-41-28.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;4.link8*10&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/4bar/four/solvespace_2017-04-18_18-41-44.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/4bar/four/solvespace_2017-04-18_18-41-59.png" width="560" /&gt;&lt;/p&gt;
&lt;h2&gt;二.在 V-rep 模擬 Fourbar&lt;/h2&gt;
&lt;p&gt;&lt;button onClick="lity('https://vimeo.com/211155142')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt;V-rep&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/4bar/four/vrep_2017-04-18_19-02-46.png" width="560" /&gt;&lt;/p&gt;
&lt;h2&gt;三.解決倉儲推送出現問題&lt;/h2&gt;
&lt;p&gt;&lt;img src="./../data/chrome_2017-04-18_19-34-27.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/chrome_2017-04-18_19-36-53.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;解決辦法：
刪掉裡面所有的東西&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/explorer_2017-04-18_19-39-40.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;原因：是Github更新造成版本錯誤，只要刪掉衝突的東西就能正常上傳。&lt;/p&gt;
&lt;h2&gt;四.心得：&lt;/h2&gt;
&lt;p&gt;這次發現無法推到Github，有點嚇到，以為我把它弄爆了，去查了一下知道怎麼解決，感覺還不錯，下次如過有問題，希望也能這樣順利解決。&lt;/p&gt;</summary><category term="11"></category></entry><entry><title>2017/03/22 W5</title><link href="./2017Spring-cd-W5.html" rel="alternate"></link><published>2017-03-22T13:00:00+08:00</published><updated>2017-03-22T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-03-22:./2017Spring-cd-W5.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第五週上課內容&lt;/h2&gt;
&lt;h2&gt;一.Fossil SCM 與 Stunnel 啟動整合&lt;/h2&gt;
&lt;p&gt;一. 更改 Start.bat 設定&lt;/p&gt;


&lt;pre class="brush: python"&gt;
REM tiny2017 主要針對初學 Python3 與 C 學員所建立
REM 近端使用 fossil 管理資料版本, 並且定時轉為 git 格式後上傳到 github
@echo off
REM 設定 y 硬碟代號與 data 目錄對應
set Disk=y
subst %Disk%: "data"
REM 設定 leo 相關對應 Home 位置
set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"
REM 將後續的指令執行, 以 %Disk% 為主
%Disk%:
REM 設定 PYTHONPATH
set PYTHONPATH=%Disk%:\python-3.5.3-embed-amd64
REM 設定 Leo 所用的編輯器
set LEO_EDITOR=%Disk%:\wscite\SciTE.exe
REM for fossil https 連線設定
set HTTPS=on
REM 指令搜尋路徑設定
set path1=%PATH%;%Disk%:;%Disk%:\python-3.5.3-embed-amd64;%Disk%:\git\bin;%Disk%:\stunnel\bin;%Disk%:\sqlite-tools;%Disk%:\python-3.5.3-embed-amd64\Scripts;%Disk%:\portablegit\bin;
set path2=c:\Windows\Microsoft.NET\Framework\v3.5;%Disk%:\python-3.5.3-embed-amd64\Lib\site-packages;
set path3="C:\Program Files (x86)\Google\Chrome\Application"
path=%path%;%path1%;%path2%;%path3%
start /MIN %Disk%:\wscite\SciTE.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
REM 啟動 Leo 編輯器
REM %Disk%:\Miniconda3\python.exe %Disk%:\apps\launchLeo.py
REM 啟動 stunnel
start /MIN fossil.exe server -P 127.0.0.1:8080 %Disk%:\tmp\fossil_repo\2017springcd_bg1.fpssil
REM 取得電腦 IP, 然後設定 %Disk%:/stunnel/config/stunnel.conf
for /f "delims=[] tokens=2" %%a in ('ping -4 -n 1 %ComputerName% ^| findstr [') do set NetworkIP=%%a
REM echo Network IP: %NetworkIP%
REM Saved in %Disk%:\stunnel\config\stunnel.conf
@echo off
REM 建立 stunnel.conf
@echo [https] &gt; %Disk%:\stunnel\config\stunnel.conf
REM 附加資料
@echo accept = %NetworkIP%:443 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo connect = 127.0.0.1:8080 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo TIMEOUTclose = 0 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo cert = %Disk%:\stunnel\config\localhost.crt &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo key = %Disk%:\stunnel\config\localhost.key &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
REM 啟動 stunnel
start /MIN stunnel.exe
REM 以 chrome 連線到 https://%NetworkIP%:443
chrome https://%NetworkIP% https://mde2a2.kmol.info/cdbg1
Exit
&lt;/pre&gt;

&lt;h2&gt;二.solvespace將單連桿轉入v-rep進行馬達運動模擬&lt;/h2&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/210906520" width="640" height="346" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/210906520"&gt;solvespace組立轉入v-rep&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;三.心得&lt;/h2&gt;
&lt;p&gt;這次上課學到如何將畫好的機構，使用V-rep來做運動模擬，在對於新產品開發有很大的幫助。&lt;/p&gt;</summary><category term="Fossil SCM 與 Stunnel 啟動整合"></category></entry><entry><title>2017/03/15 W4</title><link href="./2017Spring-cd-W4.html" rel="alternate"></link><published>2017-03-15T13:00:00+08:00</published><updated>2017-03-15T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-03-15:./2017Spring-cd-W4.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第四週上課內容&lt;/h2&gt;


&lt;h2&gt;一、Fossil SCM倉儲&lt;/h2&gt;
&lt;p&gt;&lt;p&gt;每組要在https://mde2a2.kmol.info 主機上建倉儲:&lt;a href="https://mde2a2.kmol.info/cdbg5"&gt;https://mde2a2.kmol.info/cdbg5&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;二、單連桿機構&lt;/h2&gt;
&lt;p&gt;solvespace繪製&lt;button onClick="lity('https://vimeo.com/210904309')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 單聯桿機構 繪製&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/210904346')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 單聯桿機構組合&lt;/button&gt;&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;solvespace組立轉入v-rep&lt;button onClick="lity('https://vimeo.com/210906520')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 影片&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;Onshape繪製&lt;button onClick="lity('https://vimeo.com/210905493')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 單連桿機構&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;onshape組立轉入v-rep&lt;button onClick="lity('https://vimeo.com/210907004')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt;影片&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;單聯桿轉入V-rep加入馬達&lt;button onClick="lity('https://vimeo.com/210913103')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt;影片&lt;/button&gt;&lt;/p&gt;
&lt;h2&gt;三.心得&lt;/h2&gt;
&lt;p&gt;這次上課老師教我們用一個主機倉儲，只要有一台主機是保持在網路連線，我們就可以直接從這台主機上下載檔案，這對於Github未來有可能收費或消失的替代方案。&lt;/p&gt;</summary><category term="Fossil SCM倉儲"></category></entry><entry><title>2017/03/08 W3</title><link href="./2017Spring-cd-W3.html" rel="alternate"></link><published>2017-03-08T13:00:00+08:00</published><updated>2017-03-08T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-03-08:./2017Spring-cd-W3.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第三週上課內容&lt;/h2&gt;
&lt;h3&gt;HyperWorks 14.0 Student Edition&lt;/h3&gt;

&lt;p&gt;Student Edition: &lt;a href="http://www.altairuniversity.com/get-the-free-hyperworks-14-0-student-edition/"&gt;下載位址Download Now!&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;一.近端Fossil&lt;/h3&gt;

&lt;p&gt;1. 更改Start.bat設定&lt;/p&gt;

&lt;pre class="brush: python"&gt;
REM tiny2017 主要針對初學 Python3 與 C 學員所建立
REM 近端使用 fossil 管理資料版本, 並且定時轉為 git 格式後上傳到 github
@echo off
REM 設定 y 硬碟代號與 data 目錄對應
set Disk=y
subst %Disk%: "data"
REM 設定 leo 相關對應 Home 位置
set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"
REM 將後續的指令執行, 以 %Disk% 為主
%Disk%:
REM 設定 PYTHONPATH
set PYTHONPATH=%Disk%:\python-3.5.3-embed-amd64
REM 設定 Leo 所用的編輯器
set LEO_EDITOR=%Disk%:\wscite\SciTE.exe
REM for fossil https 連線設定
set HTTPS=on
REM 指令搜尋路徑設定
set path1=%PATH%;%Disk%:;%Disk%:\python-3.5.3-embed-amd64;%Disk%:\git\bin;%Disk%:\stunnel\bin;%Disk%:\sqlite-tools;%Disk%:\python-3.5.3-embed-amd64\Scripts;%Disk%:\portablegit\bin;
set path2=c:\Windows\Microsoft.NET\Framework\v3.5;%Disk%:\python-3.5.3-embed-amd64\Lib\site-packages;
path=%path%;%path1%;%path2%
start /MIN %Disk%:\wscite\SciTE.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
REM 啟動 Leo 編輯器
REM %Disk%:\Miniconda3\python.exe %Disk%:\apps\launchLeo.py
REM 啟動 stunnel
start /MIN fossil.exe server -P 127.0.0.1:8080 %Disk%:\tmp\fossil_repo\2017springcd_hw.fpssil
REM 取得電腦 IP, 然後設定 %Disk%:/stunnel/config/stunnel.conf
for /f "delims=[] tokens=2" %%a in ('ping -4 -n 1 %ComputerName% ^| findstr [') do set NetworkIP=%%a
REM echo Network IP: %NetworkIP%
REM Saved in %Disk%:\stunnel\config\stunnel.conf
@echo off
REM 建立 stunnel.conf
@echo [https] &gt; %Disk%:\stunnel\config\stunnel.conf
REM 附加資料
@echo accept = %NetworkIP%:443 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo connect = 127.0.0.1:8080 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo TIMEOUTclose = 0 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo cert = %Disk%:\stunnel\config\localhost.crt &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo key = %Disk%:\stunnel\config\localhost.key &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
REM 啟動 stunnel
start /MIN stunnel.exe
Exit
&lt;/pre&gt;

&lt;p&gt;2. 在tmp裏的fossil_repo目錄執行指令&lt;/p&gt;

&lt;pre&gt;fossil init 2017springcd_hw.fpssil&lt;/pre&gt;

&lt;p&gt;3. 查詢IP&lt;/p&gt;

&lt;pre&gt;ipconfig /all&lt;/pre&gt;

&lt;p&gt;4. 確認是否有用Proxy, 若有則需要將自己的IP設為例外&lt;/p&gt;

&lt;p&gt;5. 使用瀏覽器輸入網址&lt;/p&gt;

&lt;pre&gt;https://&lt;u&gt;電腦IPv4的IP&lt;/u&gt;&lt;/pre&gt;

&lt;h2&gt;二.四連桿機構&lt;/h2&gt;
&lt;p&gt;&lt;p&gt;solvespace&lt;/p&gt;
&lt;button onClick="lity('https://vimeo.com/211101501')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt;link30製圖影片&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/211101501')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 軌跡圖&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/211101501')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 四連桿組合&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;onshape&lt;/p&gt;

&lt;p&gt;&lt;button onClick="lity('https://vimeo.com/210899724')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link30&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/210899839')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link50&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/210899886')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link60&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/211189543')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt;四連桿組合 &lt;/button&gt;&lt;/p&gt;
&lt;h2&gt;三.第三周心得&lt;/h2&gt;
&lt;p&gt;今天是對fossil有更深得的了解，這周也畫了一些零件，下周就會用這些零件來模擬運動。&lt;/p&gt;</summary><category term="HyperWorks"></category><category term="SolvSspace"></category><category term="Onshape"></category><category term="Fossil"></category></entry><entry><title>2017/03/01 W2</title><link href="./2017Spring-cd-W2.html" rel="alternate"></link><published>2017-03-01T13:00:00+08:00</published><updated>2017-03-01T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-03-01:./2017Spring-cd-W2.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第二週上課內容&lt;/h2&gt;
&lt;h2&gt;一.利用python找出缺課人員&lt;/h2&gt;
&lt;p&gt;到班級倉儲data下載W2資料夾裡的cd_w2.py座位表的人w2b_registered.txt，再來利用程式碼列印分組名單；座位表。&lt;/p&gt;


&lt;h2&gt;分組座位程式碼&lt;/h2&gt;
&lt;pre class="brush: python"&gt;

&lt;h1&gt;import os&lt;/h1&gt;
&lt;h1&gt;讀取w2b_cadlab.txt的檔案將其儲存為adata，並設定encoding為utf-8&lt;/h1&gt;
&lt;p&gt;adata = open("w2b_cadlab.txt", encoding="utf-8").read()&lt;/p&gt;
&lt;h1&gt;讀取w2b_registered.txt的檔案將其儲存為rdata，並一行一行隔開，並設定encoding為utf-8&lt;/h1&gt;
&lt;p&gt;rdata = open("w2b_registered.txt", encoding="utf-8").read().splitlines()&lt;/p&gt;
&lt;h1&gt;列印出adata，以便檢查結果&lt;/h1&gt;
&lt;h1&gt;print(adata)&lt;/h1&gt;
&lt;h1&gt;利用splitlines將adata一行一行隔開並其儲存為alist&lt;/h1&gt;
&lt;p&gt;alist = adata.splitlines()&lt;/p&gt;
&lt;h1&gt;列印出alist[2]，以便檢查結果&lt;/h1&gt;
&lt;h1&gt;print(alist[2])&lt;/h1&gt;
&lt;h1&gt;將變數n儲存為0&lt;/h1&gt;
&lt;p&gt;n = 0&lt;/p&gt;
&lt;h1&gt;將列從0開始算起&lt;/h1&gt;
&lt;p&gt;row = 0&lt;/p&gt;
&lt;h1&gt;將final_list儲存為一個空的數列&lt;/h1&gt;
&lt;p&gt;final_list = []&lt;/p&gt;
&lt;h1&gt;將w2_list儲存為一個空的數列&lt;/h1&gt;
&lt;p&gt;w2_list = []&lt;/p&gt;
&lt;h1&gt;執行一個for迴圈從第二列開始&lt;/h1&gt;
&lt;p&gt;for stud_num in alist[2:]:
    #每執行完一次迴圈列數+1
    row = row + 1
    #執行完迴圈後用\將其隔開並儲存為blist
    blist = stud_num.split("\t")
    #列印出blist，以便檢查結果
    #print(blist)
    #將行從0開始算起
    column = 0
    #執行一個for迴圈去取得blist裡的數列
    for i in range(len(blist)):
         #每執行完一次迴圈行數+1
        column = column + 1
        #假如blist數列裡不是空白
        if blist[i] != "":
            #列印出blist[i]，以便檢查結果
            #print(blist[i])
            #將組序有用_隔開的儲存為clist 
            clist = blist[i].split("&lt;em&gt;")
            #將組序+&lt;/em&gt;+學號+&lt;em&gt;+列+行的資料儲存為stud_data
            stud_data = clist[0]+"&lt;/em&gt;"+clist[1]+"&lt;em&gt;"+str(row)+"&lt;/em&gt;"+str(column)
             #將stud_data結果附加在final_list的資料裡
            final_list.append(stud_data)
            #將clist[1]結果附加在w2_list的資料裡
            w2_list.append(clist[1])
            #每執行完一次迴圈n+1
            n = n +1&lt;/p&gt;
&lt;h1&gt;根據數列前導字串排序, 目的在建立分組數列&lt;/h1&gt;
&lt;p&gt;group_list = sorted(final_list)&lt;/p&gt;
&lt;h1&gt;列印出分組名單&lt;/h1&gt;
&lt;p&gt;print("分組名單:")&lt;/p&gt;
&lt;h1&gt;執行一個for迴圈去取得group_list裡的數列&lt;/h1&gt;
&lt;p&gt;for i in range(len(group_list)):
    #列印出 group_list[i]的資料
    print(group_list[i])&lt;/p&gt;
&lt;h1&gt;列印出座位列表&lt;/h1&gt;
&lt;p&gt;print("座位列表:")&lt;/p&gt;
&lt;h1&gt;執行一個for迴圈去取得final_list裡的數列&lt;/h1&gt;
&lt;p&gt;for i in range(len(final_list)):
    #列印出 final_list[i]的資料
    print(final_list[i])&lt;/p&gt;
&lt;h1&gt;執行一個for迴圈去取得rdata裡的數列&lt;/h1&gt;
&lt;p&gt;for i in range(len(rdata)):
    #假如有在rdata裡但沒有在w2_list裡，目的在找出缺席學生
    if rdata[i] not in w2_list:
        #列印出 rdata[i]的資料，缺席學生
        print("缺席學生:", rdata[i])&lt;/p&gt;
&lt;h1&gt;列印出學生總數n個&lt;/h1&gt;
&lt;p&gt;print("學生總數:", n)&lt;/p&gt;
&lt;h1&gt;print(os.environ)&lt;/h1&gt;
&lt;/pre&gt;

&lt;h2&gt;二.solvespace組立四連桿&lt;/h2&gt;
&lt;p&gt;1.元件加上軸心&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/208267757" width="640" height="341" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/208267757"&gt;Untitled&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;2.四連桿機構組合&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/208267743" width="640" height="341" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/208267743"&gt;Untitled&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;第二週心得&lt;/h2&gt;
&lt;p&gt;這禮拜是有用程式進行分組，但是我在使用程式碼的時候，不知道出現什麼狀況，一直當機，至後會使用組員的影片來介紹程式碼的使用&lt;/p&gt;</summary><category term="Notes  w2"></category></entry><entry><title>2017/02/22 W1</title><link href="./2017spring-cd-W1.html" rel="alternate"></link><published>2017-02-25T13:00:00+08:00</published><updated>2017-02-25T13:00:00+08:00</updated><author><name>40423246</name></author><id>tag:,2017-02-25:./2017spring-cd-W1.html</id><summary type="html">&lt;h2&gt;2017Spring 協同產品設計實習課程  第一週上課內容&lt;/h2&gt;
&lt;p&gt;&lt;span style="background-color: #ffff00"&gt;一.&lt;/span&gt;可至&lt;a href="http://mde.tw/2017springcd/blog/2017spring-cd.html"&gt;2017 Spring 協同產品設計實習&lt;/a&gt;觀看這學期的課程大綱，老師介紹了Blender 3dstudio maya的相關性，簡略說明c語言與python的優劣與使用時機。&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color: #ffff00"&gt;二.&lt;/span&gt;了解如何使用stunnel
，並且嘗試以anonymous（無名氏/遊客）的身份進入https://192.168.1.24/2017springvcp_hw/index。

在按下start之後，會出現錯誤的圖案&lt;span style="background-color: #55ff55"&gt;(1)&lt;/span&gt;，這是因為stunnel資料夾裡的config/styunnel.conf裡的ip與電腦的ip不同(styunnel.conf裡的分號代表註解)，可至cmd打ipconfig/all的指令，找到電腦的ip位置並將其複製、貼到styunnel.conf裡&lt;span style="background-color: #55ff55"&gt;(2)&lt;/span&gt;，(443為https的Port號不須修改)，如果有設置proxy就必須要到設定proxy的地方按進階，將電腦ip設為額外ip，這樣就可至google打網址，並且嘗試以anonymous（無名氏/遊客）的身份進入https://192.168.1.24/2017springvcp_hw/index。&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/207244552" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/207244552"&gt;2017-03-07_15-01-23&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span style="background-color: #ffff00"&gt;三.&lt;/span&gt;利用python程式碼控制Vrep裡的單連桿作動。&lt;/p&gt;
&lt;p&gt;可至&lt;a href="http://github.com/mdecourse/2017springcd"&gt;課程倉儲&lt;/a&gt;的data裡下載fourbar_eightbar_solvespace_vrep.7z以及onelink_vrep_remoteapi_pos_vel.7z兩個檔案，解壓縮後會有三個檔案，分別是單連桿、四連桿及八連桿，可試著在solvespace及Vrep裡開啟。&lt;/p&gt;
&lt;p&gt;在Vrep裡開啟one_link_robot_remoteAPI.ttt的檔案(ttt是Vrep檔案的副檔名)，在SciTE裡開啟one_link_robot_remoteAPI_joint_target_vel.py的檔案，按下Tool裡的Go即可開始控制單連桿，按Enter會旋轉，按P會暫停。&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/jansen_solvespace_2.png" width="560" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="./../data/2017-03-08_11-07-49.png" width="560" /&gt;&lt;/p&gt;
&lt;h2&gt;第一週心得&lt;/h2&gt;
&lt;p&gt;在新學期學到新的使用網頁的方式，之後的課程，希望能跟上進度。&lt;/p&gt;</summary><category term="notes  w1"></category></entry></feed>